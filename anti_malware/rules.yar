import "pe"

rule Group_Basic_System_DLLs {
    meta:
        description = "Common system DLLs"
        category = "Ransomware"
        score = 3
    strings:
        $kernel32 = "kernel32.dll"
        $shell32 = "shell32.dll"
        $ntdll = "ntdll.dll"
        $ole32 = "ole32.dll"
        $user32 = "user32.dll"
        $advapi32 = "advapi32.dll"
        $gdi32 = "gdi32.dll"
        $ws2_32 = "ws2_32.dll"
        $wininet = "wininet.dll"
        $comctl32 = "comctl32.dll"
        $msvcrt = "msvcrt.dll"
        $shlwapi = "shlwapi.dll"
        $comdlg32 = "comdlg32.dll"
        $rpcrt4 = "rpcrt4.dll"
        $uxtheme = "uxtheme.dll"
        $winmm = "winmm.dll"
        $oleaut32 = "oleaut32.dll"
        $bcrypt = "bcrypt.dll"
        $psapi = "psapi.dll"
        $secur32 = "secur32.dll"
    condition:
        6 of them
}

rule Group_Cryptographic_Capabilities {
    meta:
        description = "Cryptographic libraries and functions"
        category = "Ransomware"
        score = 12
    strings:
        // Crypto DLLs
        $bcrypt = "bcrypt.dll"
        $crypt32 = "crypt32.dll"
        $advapi32 = "advapi32.dll"
        $bcryptprimitives = "bcryptprimitives.dll"
        $ncrypt = "ncrypt.dll"
        $ncryptsslp = "ncryptsslp.dll"
        $cryptbase = "cryptbase.dll"
        $dpapi = "dpapi.dll"
        $secur32 = "secur32.dll"
        $sspicli = "sspicli.dll"
        $schannel = "schannel.dll"
        $wintrust = "wintrust.dll"
        $trustdll = "trust.dll"
        $cryptdll = "cryptdll.dll"
        $msasn1 = "msasn1.dll"
        $tokenbinding = "tokenbinding.dll"
        $kmsvc = "kmsvc.dll"
        $lsasrv = "lsasrv.dll"
        $kerberos = "kerberos.dll"
        $netlogon = "netlogon.dll"
        
        // Crypto Functions
        $crypt_encrypt = "CryptEncrypt"
        $crypt_decrypt = "CryptDecrypt"
        $bcrypt_encrypt = "BCryptEncrypt"
        $bcrypt_decrypt = "BCryptDecrypt"
        $bcrypt_generateSymmetricKey = "BCryptGenerateSymmetricKey"
        $bcrypt_destroyKey = "BCryptDestroyKey"
        $bcrypt_openAlgorithmProvider = "BCryptOpenAlgorithmProvider"
        $bcrypt_genRandom = "BCryptGenRandom"
        $crypt_acquireContext = "CryptAcquireContextA"
        $crypt_releaseContext = "CryptReleaseContext"
        $crypt_genKey = "CryptGenKey"
        $crypt_destroyKey = "CryptDestroyKey"
        $crypt_exportKey = "CryptExportKey"
        $crypt_importKey = "CryptImportKey"
        $crypt_genRandom = "CryptGenRandom"
        $crypt_hashData = "CryptHashData"
        $crypt_createHash = "CryptCreateHash"
        $crypt_destroyHash = "CryptDestroyHash"
        $crypt_verifySignature = "CryptVerifySignature"
        $crypt_signHash = "CryptSignHash"
        
        // Crypto Constants
        $rsa_key = { 30 82 ?? ?? 02 82 ?? ?? 00 82 ?? ?? 02 82 ?? ?? }
        $aes_sbox = { 63 7C 77 7B F2 6B 6F C5 30 01 67 2B FE D7 AB 76 }
        $aes_rcon = { 01 02 04 08 10 20 40 80 1B 36 }
        $asn1_sequence = { 30 ?? }
        $asn1_integer = { 02 ?? }
        $asn1_object_id = { 06 ?? }
        $asn1_null = { 05 00 }
        $der_encoded_sha256 = { 30 31 30 0D 06 09 60 86 48 01 65 03 04 02 01 05 00 04 20 }
        $magic_rsa1 = { 52 53 41 31 } 
    condition:
        (3 of ($bcrypt, $crypt32, $advapi32,$bcryptprimitives,$ncrypt, $ncryptsslp,$cryptbase,$dpapi, $secur32, $sspicli,$schannel,$wintrust,$trustdll, $cryptdll,$msasn1,$tokenbinding,$kmsvc,$lsasrv,$kerberos,$netlogon)) or
        (3 of ($crypt_encrypt, $crypt_decrypt, $bcrypt_encrypt,$bcrypt_decrypt,$bcrypt_generateSymmetricKey,$bcrypt_destroyKey,$bcrypt_openAlgorithmProvider, $bcrypt_genRandom,$crypt_acquireContext,$crypt_releaseContext,$crypt_genKey, $crypt_destroyKey,$crypt_exportKey,$crypt_importKey,$crypt_genRandom, $crypt_hashData, $crypt_createHash, $crypt_destroyHash,$crypt_verifySignature,$crypt_signHash)) or
        any of ($rsa_key, $aes_sbox,$aes_rcon,$asn1_sequence,$asn1_integer,$asn1_object_id,$asn1_null,$der_encoded_sha256,$magic_rsa1)
}

rule Group_File_Manipulation {
    meta:
        description = "File manipulation capabilities"
        category = "Ransomware"
        score = 18
    strings:
        // File enumeration and operations
        $find_first_file = "FindFirstFile"
        $find_next_file = "FindNextFile"
        $create_file = "CreateFile"
        $write_file = "WriteFile"
        $delete_file = "DeleteFile"
        $get_logical_drives = "GetLogicalDrives"
        
        // Multiple file extensions
        $txt = ".txt"
        $jpg = ".jpg"
        $pdf = ".pdf"
        $docx = ".docx"
        $xlsx = ".xlsx"
    condition:
        (4 of ($find_first_file, $find_next_file, $create_file, $write_file, $delete_file, $get_logical_drives)) or
        (#txt + #jpg + #pdf + #docx + #xlsx > 5)
}

rule Group_Anti_Analysis_Techniques {
    meta:
        description = "Anti-debugging and evasion techniques"
        category = "Ransomware"
        score = 25
    strings:
        // Anti-debugging
        $is_debugger_present = "IsDebuggerPresent"
        $check_remote_debugger = "CheckRemoteDebuggerPresent"
        $nt_query_information_process = "NtQueryInformationProcess"
        $set_unhandled_exception_filter = "SetUnhandledExceptionFilter"
        $output_debug_string = "OutputDebugStringA"
        $close_handle = "CloseHandle"
        $create_toolhelp32_snapshot = "CreateToolhelp32Snapshot"
        $process32_first = "Process32First"
        $process32_next = "Process32Next"
        $debug_active_process = "DebugActiveProcess"
        $debug_break = "DebugBreak"
        $find_window = "FindWindowA"
        $get_tick_count = "GetTickCount"
        $query_performance_counter = "QueryPerformanceCounter"
        $nt_set_information_thread = "NtSetInformationThread"
        $virtual_query_ex = "VirtualQueryEx"
        
        // Process manipulation
        $virtual_alloc = "VirtualAlloc"
        $write_process_memory = "WriteProcessMemory"
        $create_remote_thread = "CreateRemoteThread"
        $open_process = "OpenProcess"
        $read_process_memory = "ReadProcessMemory"
        $virtual_alloc_ex = "VirtualAllocEx"
        $virtual_free_ex = "VirtualFreeEx"
        $queue_user_apc = "QueueUserAPC"
        $nt_create_thread_ex = "NtCreateThreadEx"
        $create_process_internal_w = "CreateProcessInternalW"
        $suspend_thread = "SuspendThread"
        $resume_thread = "ResumeThread"
        
        // Weird PE sections
        $weird_section = /(UPX|\.packed|\.encrypt|\.malware|\.boom|\.adata|\.bss|\.rsrc1|\.blah|\.pklos|\.aspack|\.petite|\.MPRESS|\.y0da|\.text0|\.writable|\.data1|\.fake|\.refl|\.code|\.bind|\.xyz)/

    condition:
        (5 of ($is_debugger_present, $check_remote_debugger,$nt_query_information_process,$set_unhandled_exception_filter, $output_debug_string, $close_handle,$create_toolhelp32_snapshot,$process32_first,$process32_next,$debug_active_process,$debug_break,$find_window,$get_tick_count, $query_performance_counter,$read_process_memory,$write_process_memory, $suspend_thread,$resume_thread, $nt_set_information_thread,$virtual_query_ex)) or
        (5  of ($virtual_alloc, $write_process_memory, $create_remote_thread,$open_process,$read_process_memory, $virtual_alloc_ex,$virtual_free_ex, $queue_user_apc,$nt_create_thread_ex,$create_process_internal_w,$suspend_thread, $resume_thread)) or
        $weird_section
}

rule Group_Direct_Ransomware_Indicators {
    meta:
        description = "Direct indicators of ransomware"
        category = "Ransomware"
        score = 40
    strings:
        // Ransom note words
        $bitcoin = "bitcoin" nocase
        $ransom = "ransom" nocase
        $private_key = "private key" nocase
        $recovery = "recovery" nocase
        $wallet = "wallet" nocase
        $hacked = "hacked" nocase
        $hacked_by = "hacked by" nocase

        // Ransom note patterns
        $ransom_note = "Your files have been encrypted" nocase
        $payment_demand = "payment" nocase
        $file_recovery = "recover your files" nocase
        $how_to_pay = "how to pay" nocase
        $decrypt_tool = "decrypt tool" nocase
        $send_bitcoin = "send bitcoin" nocase
        
        // Suspicious file extensions
        $ext_encrypted = ".encrypted"
        $ext_locked = ".locked"
        $ext_ransom = ".ransom"
        $ext_crypt = ".crypt"
    condition:
        (2 of ($bitcoin, $ransom,$private_key,$recovery, $ransom_note,$wallet,$hacked,$hacked_by, $payment_demand,$file_recovery, $how_to_pay,$decrypt_tool,$send_bitcoin)) or
        any of ($ext_encrypted, $ext_locked, $ext_ransom, $ext_crypt)
}


rule Group_File_Extension_Targeting {
    meta:
        description = "Targeting specific file extensions for encryption"
        category = "Ransomware"
        score = 20
    strings:
        $doc = ".doc" nocase
        $docx = ".docx" nocase
        $xls = ".xls" nocase
        $xlsx = ".xlsx" nocase
        $ppt = ".ppt" nocase
        $pptx = ".pptx" nocase
        $pdf = ".pdf" nocase
        $jpg = ".jpg" nocase
        $jpeg = ".jpeg" nocase
        $png = ".png" nocase
        $zip = ".zip" nocase
        $rar = ".rar" nocase
        $7z = ".7z" nocase
        $sql = ".sql" nocase
        $mdb = ".mdb" nocase
        $mp3 = ".mp3" nocase
        $mp4 = ".mp4" nocase
        $pst = ".pst" nocase
    condition:
        10 of them
}

// NEW RULE: System disruption techniques
rule Group_System_Disruption {
    meta:
        description = "Functions used to disrupt system recovery"
        category = "Ransomware"
        score = 20
    strings:
        $delete_shadow_copies = "vssadmin delete shadows" nocase
        $disable_recovery = "bcdedit /set {default} recoveryenabled No" nocase
        $disable_startup_repair = "bcdedit /set {default} bootstatuspolicy" nocase
        $wmic_shadowcopy = "wmic shadowcopy delete" nocase
        $wbadmin = "wbadmin delete systemstatebackup" nocase
        $recover_disable = "recovery disabled" nocase
        $delete_backups = "delete catalog" nocase
        $disable_service = "sc stop" nocase
        $delete_eventlogs = "wevtutil cl" nocase
        $clear_logs = "Clear-EventLog" nocase
    condition:
        2 of them
}

rule Is_Ransomware {
    meta:
        description = "Binary decision rule for ransomware detection"
        author = "M4 Ahmed"
        version = "1.0"
        is_ransomware = "true"
    condition:
        pe.is_pe and (
            // Require Direct Ransomware Indicators combined with other behaviors
            (Group_Direct_Ransomware_Indicators and Group_Cryptographic_Capabilities) or
            
            // Require more specific combinations for the second condition
            (Group_Cryptographic_Capabilities and Group_File_Manipulation and Group_Anti_Analysis_Techniques and 
                // Additional constraints to filter out build tools
                pe.sections[0].name != ".text" and  // Most build tools have standard section names
                not pe.is_dll() and               // Ransomware is rarely a DLL
                pe.number_of_sections > 3 and      // Ransomware often has unusual section counts
                pe.imports("kernel32.dll", "CreateProcessA") // Common in ransomware, not all build tools
            )
        )
}

// NEW: Known tools whitelist rule
rule Developer_Tools {
    meta:
        description = "Known developer tools"
        author = "M4 Ahmed"
        version = "1.0"
    strings:
        $ninja = "ninja.exe" nocase
        $cmake = "cmake.exe" nocase
        $msbuild = "msbuild.exe" nocase
        $gcc = "gcc.exe" nocase
        $clang = "clang.exe" nocase
        $python = "python.exe" nocase
        $make = "make.exe" nocase
    condition:
        pe.is_pe and any of them
}